{"tagline":"Japanese toolbox for PHP","body":"#README\r\n\r\n##What is JpnForPHP?\r\nA tiny PHP lib which provides nice functions & wrappers to interact with Japanese language.\r\n\r\n##Quick links\r\n- [Official Website](http://mbilbille.github.com/jpnforphp/)\r\n- [Demos](http://lab.openjisho.com/jpnforphp/demo.html) _coming soon_\r\n- [Unit tests](http://lab.openjisho.com/jpnforphp/unit.html)\r\n\r\n##Features list\r\n_Complete rewrite_ ; the library is now based on 3 components\r\n\r\n- **Helper:** a set of function to help you interact with Japanese wordings (split, extract, clean, etc.).\r\n- **Analyzer:** various \"inspecting\" functions (length, count kana, etc.).\r\n- **Transliterator:** handle both transliterations roman to kana and kana to roman (support all mainstream romanization systems).\r\n\r\n##Usage\r\n\r\n- **Helper component:**\r\n\r\n```php\r\n<?php\r\n  use JpnForPhp\\Helper\\Helper;\r\n\r\n  Helper::split('素晴らしいです'); // array('素','晴','ら','し','い','で','す')\r\n  Helper::subString('素晴らしいです', 2, 4); // 'らし'\r\n  Helper::extractKanji('素晴らしいです'); // array('素晴')\r\n  Helper::extractHiragana('素晴らしいです'); // array('らしいです')\r\n?>\r\n```\r\n\r\n- **Analyzer component**\r\n\r\n```php\r\n<?php\r\n  use JpnForPhp\\Analyzer\\Analyzer;\r\n\r\n  Analyzer::length('素晴らしいです'); // 7\r\n  Analyzer::inspect('素晴らしいです'); // array('length'=>7,'kanji'=>2,'hiragana' =>5,'katakana'=>0)\r\n  Analyzer::countHiragana('素晴らしいです'); // 5\r\n  Analyzer::hasKanji('素晴らしいです'); // TRUE\r\n?>\r\n```\r\n\r\n- **Transliterator component:**\r\n\r\n```php\r\n<?php\r\n  use JpnForPhp\\Transliterator\\Transliterator;\r\n  use JpnForPhp\\Transliterator\\Hepburn;\r\n  use JpnForPhp\\Transliterator\\Kunrei;\r\n  use JpnForPhp\\Transliterator\\Nihon;\r\n\r\n  Transliterator::toRomaji('ローマジ で　かいて'); // rōmaji de kaite\r\n  Transliterator::toRomaji('ローマジ　で　かいて', Transliterator::HIRAGANA, new Hepburn()); // ローマジ de kaite\r\n  Transliterator::toRomaji('ローマジ　で　かいて', Transliterator::KATAKANA, new Hepburn()); // rōmaji で かいて\r\n  Transliterator::toRomaji('ローマジ　で　かいて', NULL, new Kunrei()); // rômazi de kaite\r\n  Transliterator::toRomaji('ローマジ　で　かいて', NULL, new Nihon()); // rômazi de kaite\r\n  Transliterator::toKana('kana de kaite', Transliterator::HIRAGANA); // かな　で　かいて\r\n  Transliterator::toKana('kana de kaite', Transliterator::KATAKANA); // カナ　デ　カイテ\r\n?>\r\n```\r\n\r\n\r\n##Upcoming\r\n\r\nCheck out the _develop_ branch to get all the latest code and change (https://github.com/mbilbille/jpnforphp/tree/develop)\r\n\r\n## License\r\n\r\nJpnForPHP was created by [Matthieu Bilbille](http://mbilbille.github.com) and released under the [MIT License](http://github.com/mbilbille/jpnforphp/blob/master/LICENSE).\r\n\r\n##Integration\r\n\r\n- **JPNlizer** integrates JpnForPhp into **Drupal** - [sandbox project](http://drupal.org/sandbox/mbilbille/1613510)\r\n\r\nSponsored by [Openjisho.com](http://www.openjisho.com). ","google":"UA-30115117-2","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Jpnforphp"}