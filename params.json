{"name":"Jpnforphp","tagline":"Japanese toolbox for PHP","body":"#JpnForPhp [![build status](https://secure.travis-ci.org/mbilbille/jpnforphp.png)](http://travis-ci.org/mbilbille/jpnforphp) [![Stories in Ready](https://badge.waffle.io/mbilbille/jpnforphp.png?label=ready)](https://waffle.io/mbilbille/jpnforphp) [![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/mbilbille/jpnforphp/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\n> A tiny PHP lib which provides nice functions & wrappers to interact with Japanese language. [[Official Website](http://mbilbille.github.com/jpnforphp/)]\r\n\r\n##Installation\r\n```bash\r\ncomposer install\r\n```\r\n\r\n##Features list\r\nProvides the following components:\r\n\r\n- Helper: a set of function to help you interact with Japanese wordings (split, extract, clean, etc.).\r\n- Analyzer: various \"inspecting\" functions (length, count kana, etc.).\r\n- Transliterator: handle both transliterations roman to kana and kana to roman (support all mainstream romanization systems).\r\n\r\n##Usage\r\n\r\n###Helper component:\r\n\r\n```php\r\nuse JpnForPhp\\Helper\\Helper;\r\n\r\nHelper::split('素晴らしいです'); // array('素','晴','ら','し','い','で','す')\r\nHelper::subString('素晴らしいです', 2, 4); // 'らし'\r\nHelper::extractKanji('素晴らしいです'); // array('素晴')\r\nHelper::extractHiragana('素晴らしいです'); // array('らしいです')\r\n```\r\n\r\n###Analyzer component\r\n\r\n```php\r\nuse JpnForPhp\\Analyzer\\Analyzer;\r\n\r\nAnalyzer::length('素晴らしいです'); // 7\r\nAnalyzer::inspect('素晴らしいです'); // array('length'=>7,'kanji'=>2,'hiragana' =>5,'katakana'=>0)\r\nAnalyzer::countHiragana('素晴らしいです'); // 5\r\nAnalyzer::hasKanji('素晴らしいです'); // TRUE\r\n```\r\n\r\n###Transliterator component:\r\n\r\n```php\r\nuse JpnForPhp\\Transliterator\\Romaji;\r\nuse JpnForPhp\\Transliterator\\Kana;\r\n\r\n$hepburn = new Romaji();\r\n$kunrei = new Romaji('kunrei');\r\n$hiragana = new Kana('hiragana');\r\n$katakana = new Kana('katakana');\r\n\r\n$hepburn->transliterate('ローマジ で　かいて'); // rōmaji de kaite\r\n$kunrei->transliterate('ローマジ　で　かいて'); // rômazi de kaite\r\n$hiragana->transliterate('kana de kaite'); // かな　で　かいて\r\n$katakana->transliterate('kana de kaite'A); // カナ　デ　カイテ\r\n```\r\n\r\nStarting from the version 0.5, all the transliteration workflow is defined in ```.yaml``` file.\r\n\r\n```Romaji.php``` and ```Kana.php``` provides a wild range of functions which can be used to define your own transliteration system.\r\nHere is a sample ```.yaml``` file\r\n\r\n```yaml\r\nid: mySystem\r\nname:\r\n    english: \"My romanization system\"\r\n    japanese: \"マイローマ字\"\r\nworkflow:\r\n    - function: transliterateDefaultCharacters\r\n      parameters:\r\n            mapping:\r\n                あ: a\r\n                い: i\r\n                // [...]\r\n                ぽ: po\r\n                ゔ: pu\r\n    - function: transliterateSokuon\r\n      parameters:\r\n            default: true\r\n            hepburn: false\r\n    - function: transliterateChoonpu\r\n      parameters:\r\n        macrons:\r\n            a: aa\r\n            i: ii\r\n            u: uu\r\n            e: ee\r\n            o: oo\r\n```\r\n\r\nJpnForPhp supports the following standard transliteration system:\r\n- [Hepburn](http://en.wikipedia.org/wiki/Hepburn_romanization)\r\n- [Kunrei](http://en.wikipedia.org/wiki/Kunrei-shiki_romanization)\r\n- [Nihon](http://en.wikipedia.org/wiki/Nihon-shiki_romanization)\r\n- [Wapuro](http://en.wikipedia.org/wiki/W%C4%81puro_r%C5%8Dmaji)\r\n- [JSL](http://en.wikipedia.org/wiki/JSL_romanization) _yet to be implemented_\r\n\r\n```.yaml``` files for those transliteration systems are available here:\r\n- [hepburn](src/JpnForPhp/Transliterator/Romaji/hepburn.yaml)\r\n- [kunrei](src/JpnForPhp/Transliterator/Romaji/kunrei.yaml)\r\n- [nihon](src/JpnForPhp/Transliterator/Romaji/nihon.yaml)\r\n- [wapuro](src/JpnForPhp/Transliterator/Romaji/wapuro.yaml)\r\n- [hiragana](src/JpnForPhp/Transliterator/Romaji/hiragana.yaml)\r\n- [katakana](src/JpnForPhp/Transliterator/Romaji/katakana.yaml)\r\n\r\n\r\n##Upcoming\r\n\r\nCheck out the _develop_ branch to get all the latest code and change (http://github.com/mbilbille/jpnforphp/tree/develop)\r\n\r\n## License\r\n\r\nJpnForPHP was created by [Matthieu Bilbille](http://github.com/mbilbille) and released under the [MIT License](http://github.com/mbilbille/jpnforphp/blob/master/LICENSE).\r\n\r\n##Integration\r\n\r\n- **JPNlizer** integrates JpnForPhp into **Drupal** - [sandbox project](http://drupal.org/sandbox/mbilbille/1613510)\r\n\r\nSponsored by [Openjisho.com](http://www.openjisho.com).\r\n","google":"UA-30115117-2","note":"Don't delete this file! It's used internally to help with page regeneration."}